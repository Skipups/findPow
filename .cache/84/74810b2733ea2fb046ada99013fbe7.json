{"id":"../node_modules/snow-forecast-sfr/lib/utils/TimeUtil.js","dependencies":[{"name":"/Users/svetlanarovinsky/projects/findPow/package.json","includedInParent":true,"mtime":1591066640991},{"name":"/Users/svetlanarovinsky/projects/findPow/node_modules/snow-forecast-sfr/package.json","includedInParent":true,"mtime":1591057886919}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst TimeUtil = {\n    times: ['AM', 'PM', 'night'],\n    days: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    currentDayOffset: 0,\n    MIN_DAY_STRING_LEN: 4,\n    MAX_INDEX_CNT: 17,\n    getTime(timePeriodIndex, startDay, index) {\n        const timeDiff = (timePeriodIndex + index) % this.times.length;\n        const dayDiff = this.getDayOffset(startDay, timePeriodIndex, index);\n        if (index === this.MAX_INDEX_CNT) {\n            this.currentDayOffset = 0;\n        }\n        return this.days[dayDiff] + ' ' + this.times[timeDiff];\n    },\n    getTimeOffset(startTime) {\n        return this.times.indexOf(startTime);\n    },\n    getDayOffset(startDay, timePeriodIndex, index) {\n        const firstDayPos = this.days.indexOf(this.getCorrectDay(startDay));\n        if (((timePeriodIndex + index) / this.times.length) % 1 === 0 && timePeriodIndex + index !== 0) {\n            this.currentDayOffset++;\n        }\n        return (firstDayPos + this.currentDayOffset) % this.days.length;\n    },\n    getDay(lastUpdateDate, timePeriodIndex, index) {\n        const offset = Math.floor((timePeriodIndex + index) / this.times.length);\n        const date = new Date(lastUpdateDate.trim());\n        if (offset > 0) {\n            date.setDate(date.getDate() + offset);\n        }\n        return date.toDateString();\n    },\n    getCorrectDay(day) {\n        if (day.length > this.MIN_DAY_STRING_LEN) {\n            return day.split(' ')[0].trim();\n        }\n        return this.days.find((currentDay) => currentDay.includes(day));\n    },\n    fixIssueDateFormat(issuedDate) {\n        const tmpDateArray = issuedDate.split(' ');\n        const tmpDate = tmpDateArray.join('').match(/(\\d+|[^\\d]+)/g);\n        return tmpDate[0] + tmpDate[1].trim() + ' ' + tmpDate[2] + ' ' + tmpDate[3].trim() + ' ' + tmpDate[4];\n    },\n    getPrevDay(startDay) {\n        const index = this.days.indexOf(startDay);\n        return index === 0 ? this.days[6] : this.days[index - 1];\n    },\n};\nexports.default = TimeUtil;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/snow-forecast-sfr/lib/utils/TimeUtil.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/snow-forecast-sfr/lib/utils/TimeUtil.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/snow-forecast-sfr/lib/utils/TimeUtil.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/snow-forecast-sfr/lib/utils/TimeUtil.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/snow-forecast-sfr/lib/utils/TimeUtil.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/snow-forecast-sfr/lib/utils/TimeUtil.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/snow-forecast-sfr/lib/utils/TimeUtil.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/snow-forecast-sfr/lib/utils/TimeUtil.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/snow-forecast-sfr/lib/utils/TimeUtil.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/snow-forecast-sfr/lib/utils/TimeUtil.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/snow-forecast-sfr/lib/utils/TimeUtil.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/snow-forecast-sfr/lib/utils/TimeUtil.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/snow-forecast-sfr/lib/utils/TimeUtil.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/snow-forecast-sfr/lib/utils/TimeUtil.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/snow-forecast-sfr/lib/utils/TimeUtil.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/snow-forecast-sfr/lib/utils/TimeUtil.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/snow-forecast-sfr/lib/utils/TimeUtil.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/snow-forecast-sfr/lib/utils/TimeUtil.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/snow-forecast-sfr/lib/utils/TimeUtil.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/snow-forecast-sfr/lib/utils/TimeUtil.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/snow-forecast-sfr/lib/utils/TimeUtil.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/snow-forecast-sfr/lib/utils/TimeUtil.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/snow-forecast-sfr/lib/utils/TimeUtil.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/snow-forecast-sfr/lib/utils/TimeUtil.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/snow-forecast-sfr/lib/utils/TimeUtil.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/snow-forecast-sfr/lib/utils/TimeUtil.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/snow-forecast-sfr/lib/utils/TimeUtil.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/snow-forecast-sfr/lib/utils/TimeUtil.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/snow-forecast-sfr/lib/utils/TimeUtil.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/snow-forecast-sfr/lib/utils/TimeUtil.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/snow-forecast-sfr/lib/utils/TimeUtil.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/snow-forecast-sfr/lib/utils/TimeUtil.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/snow-forecast-sfr/lib/utils/TimeUtil.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/snow-forecast-sfr/lib/utils/TimeUtil.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/snow-forecast-sfr/lib/utils/TimeUtil.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/snow-forecast-sfr/lib/utils/TimeUtil.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/snow-forecast-sfr/lib/utils/TimeUtil.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/snow-forecast-sfr/lib/utils/TimeUtil.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/snow-forecast-sfr/lib/utils/TimeUtil.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/snow-forecast-sfr/lib/utils/TimeUtil.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/snow-forecast-sfr/lib/utils/TimeUtil.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/snow-forecast-sfr/lib/utils/TimeUtil.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/snow-forecast-sfr/lib/utils/TimeUtil.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/snow-forecast-sfr/lib/utils/TimeUtil.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/snow-forecast-sfr/lib/utils/TimeUtil.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/snow-forecast-sfr/lib/utils/TimeUtil.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/snow-forecast-sfr/lib/utils/TimeUtil.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/snow-forecast-sfr/lib/utils/TimeUtil.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/snow-forecast-sfr/lib/utils/TimeUtil.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/snow-forecast-sfr/lib/utils/TimeUtil.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/snow-forecast-sfr/lib/utils/TimeUtil.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/snow-forecast-sfr/lib/utils/TimeUtil.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}}],"sources":{"../node_modules/snow-forecast-sfr/lib/utils/TimeUtil.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst TimeUtil = {\n    times: ['AM', 'PM', 'night'],\n    days: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    currentDayOffset: 0,\n    MIN_DAY_STRING_LEN: 4,\n    MAX_INDEX_CNT: 17,\n    getTime(timePeriodIndex, startDay, index) {\n        const timeDiff = (timePeriodIndex + index) % this.times.length;\n        const dayDiff = this.getDayOffset(startDay, timePeriodIndex, index);\n        if (index === this.MAX_INDEX_CNT) {\n            this.currentDayOffset = 0;\n        }\n        return this.days[dayDiff] + ' ' + this.times[timeDiff];\n    },\n    getTimeOffset(startTime) {\n        return this.times.indexOf(startTime);\n    },\n    getDayOffset(startDay, timePeriodIndex, index) {\n        const firstDayPos = this.days.indexOf(this.getCorrectDay(startDay));\n        if (((timePeriodIndex + index) / this.times.length) % 1 === 0 && timePeriodIndex + index !== 0) {\n            this.currentDayOffset++;\n        }\n        return (firstDayPos + this.currentDayOffset) % this.days.length;\n    },\n    getDay(lastUpdateDate, timePeriodIndex, index) {\n        const offset = Math.floor((timePeriodIndex + index) / this.times.length);\n        const date = new Date(lastUpdateDate.trim());\n        if (offset > 0) {\n            date.setDate(date.getDate() + offset);\n        }\n        return date.toDateString();\n    },\n    getCorrectDay(day) {\n        if (day.length > this.MIN_DAY_STRING_LEN) {\n            return day.split(' ')[0].trim();\n        }\n        return this.days.find((currentDay) => currentDay.includes(day));\n    },\n    fixIssueDateFormat(issuedDate) {\n        const tmpDateArray = issuedDate.split(' ');\n        const tmpDate = tmpDateArray.join('').match(/(\\d+|[^\\d]+)/g);\n        return tmpDate[0] + tmpDate[1].trim() + ' ' + tmpDate[2] + ' ' + tmpDate[3].trim() + ' ' + tmpDate[4];\n    },\n    getPrevDay(startDay) {\n        const index = this.days.indexOf(startDay);\n        return index === 0 ? this.days[6] : this.days[index - 1];\n    },\n};\nexports.default = TimeUtil;\n"},"lineCount":52}},"error":null,"hash":"285a4cf411e1e2adf0e1000f17e866bb","cacheData":{"env":{}}}