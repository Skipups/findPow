{"id":"../node_modules/cheerio/node_modules/parse5/lib/utils/merge_options.js","dependencies":[{"name":"/Users/svetlanarovinsky/projects/findPow/package.json","includedInParent":true,"mtime":1591066347587},{"name":"/Users/svetlanarovinsky/projects/findPow/node_modules/cheerio/node_modules/parse5/package.json","includedInParent":true,"mtime":1591057886919}],"generated":{"js":"'use strict';\n\nmodule.exports = function mergeOptions(defaults, options) {\n    options = options || Object.create(null);\n\n    return [defaults, options].reduce(function (merged, optObj) {\n        Object.keys(optObj).forEach(function (key) {\n            merged[key] = optObj[key];\n        });\n\n        return merged;\n    }, Object.create(null));\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/cheerio/node_modules/parse5/lib/utils/merge_options.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/cheerio/node_modules/parse5/lib/utils/merge_options.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/cheerio/node_modules/parse5/lib/utils/merge_options.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/cheerio/node_modules/parse5/lib/utils/merge_options.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/cheerio/node_modules/parse5/lib/utils/merge_options.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/cheerio/node_modules/parse5/lib/utils/merge_options.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/cheerio/node_modules/parse5/lib/utils/merge_options.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/cheerio/node_modules/parse5/lib/utils/merge_options.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/cheerio/node_modules/parse5/lib/utils/merge_options.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/cheerio/node_modules/parse5/lib/utils/merge_options.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/cheerio/node_modules/parse5/lib/utils/merge_options.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/cheerio/node_modules/parse5/lib/utils/merge_options.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/cheerio/node_modules/parse5/lib/utils/merge_options.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/cheerio/node_modules/parse5/lib/utils/merge_options.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}}],"sources":{"../node_modules/cheerio/node_modules/parse5/lib/utils/merge_options.js":"'use strict';\n\nmodule.exports = function mergeOptions(defaults, options) {\n    options = options || Object.create(null);\n\n    return [defaults, options].reduce(function (merged, optObj) {\n        Object.keys(optObj).forEach(function (key) {\n            merged[key] = optObj[key];\n        });\n\n        return merged;\n    }, Object.create(null));\n};\n"},"lineCount":14}},"error":null,"hash":"a0aff424ba96ba50629ab870c65d5dbf","cacheData":{"env":{}}}