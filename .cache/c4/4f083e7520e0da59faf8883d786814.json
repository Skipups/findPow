{"id":"../node_modules/bent/src/core.js","dependencies":[{"name":"/Users/svetlanarovinsky/projects/findPow/package.json","includedInParent":true,"mtime":1591057887473},{"name":"/Users/svetlanarovinsky/projects/findPow/node_modules/bent/package.json","includedInParent":true,"mtime":1591057886918}],"generated":{"js":"'use strict'\nconst encodings = new Set(['json', 'buffer', 'string'])\n\nmodule.exports = mkrequest => (...args) => {\n  const statusCodes = new Set()\n  let method\n  let encoding\n  let headers\n  let baseurl = ''\n\n  args.forEach(arg => {\n    if (typeof arg === 'string') {\n      if (arg.toUpperCase() === arg) {\n        if (method) {\n          const msg = `Can't set method to ${arg}, already set to ${method}.`\n          throw new Error(msg)\n        } else {\n          method = arg\n        }\n      } else if (arg.startsWith('http:') || arg.startsWith('https:')) {\n        baseurl = arg\n      } else {\n        if (encodings.has(arg)) {\n          encoding = arg\n        } else {\n          throw new Error(`Unknown encoding, ${arg}`)\n        }\n      }\n    } else if (typeof arg === 'number') {\n      statusCodes.add(arg)\n    } else if (typeof arg === 'object') {\n      if (headers) {\n        throw new Error('Cannot set headers twice.')\n      }\n      headers = arg\n    } else {\n      throw new Error(`Unknown type: ${typeof arg}`)\n    }\n  })\n\n  if (!method) method = 'GET'\n  if (statusCodes.size === 0) {\n    statusCodes.add(200)\n  }\n\n  return mkrequest(statusCodes, method, encoding, headers, baseurl)\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/bent/src/core.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/bent/src/core.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/bent/src/core.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/bent/src/core.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/bent/src/core.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/bent/src/core.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/bent/src/core.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/bent/src/core.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/bent/src/core.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/bent/src/core.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/bent/src/core.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/bent/src/core.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/bent/src/core.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/bent/src/core.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/bent/src/core.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/bent/src/core.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/bent/src/core.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/bent/src/core.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/bent/src/core.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/bent/src/core.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/bent/src/core.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/bent/src/core.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/bent/src/core.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/bent/src/core.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/bent/src/core.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/bent/src/core.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/bent/src/core.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/bent/src/core.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/bent/src/core.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/bent/src/core.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/bent/src/core.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/bent/src/core.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/bent/src/core.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/bent/src/core.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/bent/src/core.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/bent/src/core.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/bent/src/core.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/bent/src/core.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/bent/src/core.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/bent/src/core.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/bent/src/core.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/bent/src/core.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/bent/src/core.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/bent/src/core.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/bent/src/core.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/bent/src/core.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/bent/src/core.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/bent/src/core.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}}],"sources":{"../node_modules/bent/src/core.js":"'use strict'\nconst encodings = new Set(['json', 'buffer', 'string'])\n\nmodule.exports = mkrequest => (...args) => {\n  const statusCodes = new Set()\n  let method\n  let encoding\n  let headers\n  let baseurl = ''\n\n  args.forEach(arg => {\n    if (typeof arg === 'string') {\n      if (arg.toUpperCase() === arg) {\n        if (method) {\n          const msg = `Can't set method to ${arg}, already set to ${method}.`\n          throw new Error(msg)\n        } else {\n          method = arg\n        }\n      } else if (arg.startsWith('http:') || arg.startsWith('https:')) {\n        baseurl = arg\n      } else {\n        if (encodings.has(arg)) {\n          encoding = arg\n        } else {\n          throw new Error(`Unknown encoding, ${arg}`)\n        }\n      }\n    } else if (typeof arg === 'number') {\n      statusCodes.add(arg)\n    } else if (typeof arg === 'object') {\n      if (headers) {\n        throw new Error('Cannot set headers twice.')\n      }\n      headers = arg\n    } else {\n      throw new Error(`Unknown type: ${typeof arg}`)\n    }\n  })\n\n  if (!method) method = 'GET'\n  if (statusCodes.size === 0) {\n    statusCodes.add(200)\n  }\n\n  return mkrequest(statusCodes, method, encoding, headers, baseurl)\n}\n"},"lineCount":48}},"error":null,"hash":"cad56e4394db1b399307d68463cfa815","cacheData":{"env":{}}}