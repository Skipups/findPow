{"id":"../node_modules/lodash/_mergeData.js","dependencies":[{"name":"/Users/svetlanarovinsky/projects/findPow/package.json","includedInParent":true,"mtime":1591066347587},{"name":"/Users/svetlanarovinsky/projects/findPow/node_modules/lodash/package.json","includedInParent":true,"mtime":1590934742373},{"name":"./_composeArgs","loc":{"line":1,"column":26},"parent":"/Users/svetlanarovinsky/projects/findPow/node_modules/lodash/_mergeData.js","resolved":"/Users/svetlanarovinsky/projects/findPow/node_modules/lodash/_composeArgs.js"},{"name":"./_composeArgsRight","loc":{"line":2,"column":31},"parent":"/Users/svetlanarovinsky/projects/findPow/node_modules/lodash/_mergeData.js","resolved":"/Users/svetlanarovinsky/projects/findPow/node_modules/lodash/_composeArgsRight.js"},{"name":"./_replaceHolders","loc":{"line":3,"column":29},"parent":"/Users/svetlanarovinsky/projects/findPow/node_modules/lodash/_mergeData.js","resolved":"/Users/svetlanarovinsky/projects/findPow/node_modules/lodash/_replaceHolders.js"}],"generated":{"js":"var composeArgs = require('./_composeArgs'),\n    composeArgsRight = require('./_composeArgsRight'),\n    replaceHolders = require('./_replaceHolders');\n\n/** Used as the internal argument placeholder. */\nvar PLACEHOLDER = '__lodash_placeholder__';\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1,\n    WRAP_BIND_KEY_FLAG = 2,\n    WRAP_CURRY_BOUND_FLAG = 4,\n    WRAP_CURRY_FLAG = 8,\n    WRAP_ARY_FLAG = 128,\n    WRAP_REARG_FLAG = 256;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * Merges the function metadata of `source` into `data`.\n *\n * Merging metadata reduces the number of wrappers used to invoke a function.\n * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n * may be applied regardless of execution order. Methods like `_.ary` and\n * `_.rearg` modify function arguments, making the order in which they are\n * executed important, preventing the merging of metadata. However, we make\n * an exception for a safe combined case where curried functions have `_.ary`\n * and or `_.rearg` applied.\n *\n * @private\n * @param {Array} data The destination metadata.\n * @param {Array} source The source metadata.\n * @returns {Array} Returns `data`.\n */\nfunction mergeData(data, source) {\n  var bitmask = data[1],\n      srcBitmask = source[1],\n      newBitmask = bitmask | srcBitmask,\n      isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n  var isCombo =\n    ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n    ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n    ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n  // Exit early if metadata can't be merged.\n  if (!(isCommon || isCombo)) {\n    return data;\n  }\n  // Use source `thisArg` if available.\n  if (srcBitmask & WRAP_BIND_FLAG) {\n    data[2] = source[2];\n    // Set when currying a bound function.\n    newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n  }\n  // Compose partial arguments.\n  var value = source[3];\n  if (value) {\n    var partials = data[3];\n    data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n    data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n  }\n  // Compose partial right arguments.\n  value = source[5];\n  if (value) {\n    partials = data[5];\n    data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n    data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n  }\n  // Use source `argPos` if available.\n  value = source[7];\n  if (value) {\n    data[7] = value;\n  }\n  // Use source `ary` if it's smaller.\n  if (srcBitmask & WRAP_ARY_FLAG) {\n    data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n  }\n  // Use source `arity` if one is not provided.\n  if (data[9] == null) {\n    data[9] = source[9];\n  }\n  // Use source `func` and merge bitmasks.\n  data[0] = source[0];\n  data[1] = newBitmask;\n\n  return data;\n}\n\nmodule.exports = mergeData;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/lodash/_mergeData.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/lodash/_mergeData.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}}],"sources":{"../node_modules/lodash/_mergeData.js":"var composeArgs = require('./_composeArgs'),\n    composeArgsRight = require('./_composeArgsRight'),\n    replaceHolders = require('./_replaceHolders');\n\n/** Used as the internal argument placeholder. */\nvar PLACEHOLDER = '__lodash_placeholder__';\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1,\n    WRAP_BIND_KEY_FLAG = 2,\n    WRAP_CURRY_BOUND_FLAG = 4,\n    WRAP_CURRY_FLAG = 8,\n    WRAP_ARY_FLAG = 128,\n    WRAP_REARG_FLAG = 256;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * Merges the function metadata of `source` into `data`.\n *\n * Merging metadata reduces the number of wrappers used to invoke a function.\n * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n * may be applied regardless of execution order. Methods like `_.ary` and\n * `_.rearg` modify function arguments, making the order in which they are\n * executed important, preventing the merging of metadata. However, we make\n * an exception for a safe combined case where curried functions have `_.ary`\n * and or `_.rearg` applied.\n *\n * @private\n * @param {Array} data The destination metadata.\n * @param {Array} source The source metadata.\n * @returns {Array} Returns `data`.\n */\nfunction mergeData(data, source) {\n  var bitmask = data[1],\n      srcBitmask = source[1],\n      newBitmask = bitmask | srcBitmask,\n      isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n  var isCombo =\n    ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n    ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n    ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n  // Exit early if metadata can't be merged.\n  if (!(isCommon || isCombo)) {\n    return data;\n  }\n  // Use source `thisArg` if available.\n  if (srcBitmask & WRAP_BIND_FLAG) {\n    data[2] = source[2];\n    // Set when currying a bound function.\n    newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n  }\n  // Compose partial arguments.\n  var value = source[3];\n  if (value) {\n    var partials = data[3];\n    data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n    data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n  }\n  // Compose partial right arguments.\n  value = source[5];\n  if (value) {\n    partials = data[5];\n    data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n    data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n  }\n  // Use source `argPos` if available.\n  value = source[7];\n  if (value) {\n    data[7] = value;\n  }\n  // Use source `ary` if it's smaller.\n  if (srcBitmask & WRAP_ARY_FLAG) {\n    data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n  }\n  // Use source `arity` if one is not provided.\n  if (data[9] == null) {\n    data[9] = source[9];\n  }\n  // Use source `func` and merge bitmasks.\n  data[0] = source[0];\n  data[1] = newBitmask;\n\n  return data;\n}\n\nmodule.exports = mergeData;\n"},"lineCount":91}},"error":null,"hash":"c8874e188ee555c7b3de75aa6dd57d4a","cacheData":{"env":{}}}