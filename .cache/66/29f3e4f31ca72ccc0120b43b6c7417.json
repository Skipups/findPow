{"id":"../node_modules/lodash/_createRecurry.js","dependencies":[{"name":"C:\\Users\\nries\\dev\\findPow\\package.json","includedInParent":true,"mtime":1591071384316},{"name":"C:\\Users\\nries\\dev\\findPow\\node_modules\\lodash\\package.json","includedInParent":true,"mtime":1591068694500},{"name":"./_isLaziable","loc":{"line":1,"column":25},"parent":"C:\\Users\\nries\\dev\\findPow\\node_modules\\lodash\\_createRecurry.js","resolved":"C:\\Users\\nries\\dev\\findPow\\node_modules\\lodash\\_isLaziable.js"},{"name":"./_setData","loc":{"line":2,"column":22},"parent":"C:\\Users\\nries\\dev\\findPow\\node_modules\\lodash\\_createRecurry.js","resolved":"C:\\Users\\nries\\dev\\findPow\\node_modules\\lodash\\_setData.js"},{"name":"./_setWrapToString","loc":{"line":3,"column":30},"parent":"C:\\Users\\nries\\dev\\findPow\\node_modules\\lodash\\_createRecurry.js","resolved":"C:\\Users\\nries\\dev\\findPow\\node_modules\\lodash\\_setWrapToString.js"}],"generated":{"js":"var isLaziable = require('./_isLaziable'),\n    setData = require('./_setData'),\n    setWrapToString = require('./_setWrapToString');\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1,\n    WRAP_BIND_KEY_FLAG = 2,\n    WRAP_CURRY_BOUND_FLAG = 4,\n    WRAP_CURRY_FLAG = 8,\n    WRAP_PARTIAL_FLAG = 32,\n    WRAP_PARTIAL_RIGHT_FLAG = 64;\n\n/**\n * Creates a function that wraps `func` to continue currying.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @param {Function} wrapFunc The function to create the `func` wrapper.\n * @param {*} placeholder The placeholder value.\n * @param {*} [thisArg] The `this` binding of `func`.\n * @param {Array} [partials] The arguments to prepend to those provided to\n *  the new function.\n * @param {Array} [holders] The `partials` placeholder indexes.\n * @param {Array} [argPos] The argument positions of the new function.\n * @param {number} [ary] The arity cap of `func`.\n * @param {number} [arity] The arity of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n  var isCurry = bitmask & WRAP_CURRY_FLAG,\n      newHolders = isCurry ? holders : undefined,\n      newHoldersRight = isCurry ? undefined : holders,\n      newPartials = isCurry ? partials : undefined,\n      newPartialsRight = isCurry ? undefined : partials;\n\n  bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n  bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n  if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n    bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n  }\n  var newData = [\n    func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n    newHoldersRight, argPos, ary, arity\n  ];\n\n  var result = wrapFunc.apply(undefined, newData);\n  if (isLaziable(func)) {\n    setData(result, newData);\n  }\n  result.placeholder = placeholder;\n  return setWrapToString(result, func, bitmask);\n}\n\nmodule.exports = createRecurry;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/lodash/_createRecurry.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/lodash/_createRecurry.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/lodash/_createRecurry.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/lodash/_createRecurry.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/lodash/_createRecurry.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/lodash/_createRecurry.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/lodash/_createRecurry.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/lodash/_createRecurry.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/lodash/_createRecurry.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/lodash/_createRecurry.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/lodash/_createRecurry.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/lodash/_createRecurry.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/lodash/_createRecurry.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/lodash/_createRecurry.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/lodash/_createRecurry.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/lodash/_createRecurry.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/lodash/_createRecurry.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/lodash/_createRecurry.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/lodash/_createRecurry.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/lodash/_createRecurry.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/lodash/_createRecurry.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/lodash/_createRecurry.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/lodash/_createRecurry.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/lodash/_createRecurry.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/lodash/_createRecurry.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/lodash/_createRecurry.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/lodash/_createRecurry.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/lodash/_createRecurry.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/lodash/_createRecurry.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/lodash/_createRecurry.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/lodash/_createRecurry.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/lodash/_createRecurry.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/lodash/_createRecurry.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/lodash/_createRecurry.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/lodash/_createRecurry.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/lodash/_createRecurry.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/lodash/_createRecurry.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/lodash/_createRecurry.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/lodash/_createRecurry.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/lodash/_createRecurry.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/lodash/_createRecurry.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/lodash/_createRecurry.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/lodash/_createRecurry.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/lodash/_createRecurry.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/lodash/_createRecurry.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/lodash/_createRecurry.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/lodash/_createRecurry.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/lodash/_createRecurry.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/lodash/_createRecurry.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/lodash/_createRecurry.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/lodash/_createRecurry.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/lodash/_createRecurry.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/lodash/_createRecurry.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/lodash/_createRecurry.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/lodash/_createRecurry.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/lodash/_createRecurry.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/lodash/_createRecurry.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}}],"sources":{"../node_modules/lodash/_createRecurry.js":"var isLaziable = require('./_isLaziable'),\n    setData = require('./_setData'),\n    setWrapToString = require('./_setWrapToString');\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1,\n    WRAP_BIND_KEY_FLAG = 2,\n    WRAP_CURRY_BOUND_FLAG = 4,\n    WRAP_CURRY_FLAG = 8,\n    WRAP_PARTIAL_FLAG = 32,\n    WRAP_PARTIAL_RIGHT_FLAG = 64;\n\n/**\n * Creates a function that wraps `func` to continue currying.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @param {Function} wrapFunc The function to create the `func` wrapper.\n * @param {*} placeholder The placeholder value.\n * @param {*} [thisArg] The `this` binding of `func`.\n * @param {Array} [partials] The arguments to prepend to those provided to\n *  the new function.\n * @param {Array} [holders] The `partials` placeholder indexes.\n * @param {Array} [argPos] The argument positions of the new function.\n * @param {number} [ary] The arity cap of `func`.\n * @param {number} [arity] The arity of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n  var isCurry = bitmask & WRAP_CURRY_FLAG,\n      newHolders = isCurry ? holders : undefined,\n      newHoldersRight = isCurry ? undefined : holders,\n      newPartials = isCurry ? partials : undefined,\n      newPartialsRight = isCurry ? undefined : partials;\n\n  bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n  bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n  if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n    bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n  }\n  var newData = [\n    func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n    newHoldersRight, argPos, ary, arity\n  ];\n\n  var result = wrapFunc.apply(undefined, newData);\n  if (isLaziable(func)) {\n    setData(result, newData);\n  }\n  result.placeholder = placeholder;\n  return setWrapToString(result, func, bitmask);\n}\n\nmodule.exports = createRecurry;\n"},"lineCount":57}},"error":null,"hash":"6ec5c252a53e6838574cd4fc72dcffd5","cacheData":{"env":{}}}